
-- USING THE PREVIOUSLY CREATED DATABASE
USE ASSIGN_DB;

-- CREATING NEW TABLE USERS FOR LOGGING CLIENT INFORMATION
CREATE TABLE USERS(
	USER_ID INT PRIMARY KEY,
	EMAIL VARCHAR(20),
	NAME VARCHAR(50)
);
-- CHECKING STRUCTURE
SELECT * FROM USERS;

-- CREATING NEW TABLE BOOKS FOR LOGGING THE PRODUCT INFO
CREATE TABLE BOOKS(
	PRODUCT_ID INT PRIMARY KEY,
	TITLE VARCHAR(50),
	PRICE FLOAT
);

SELECT * FROM BOOKS;

-- CREATING THE ORDERS TABLE
CREATE TABLE ORDERS(
	ORDER_NO INT PRIMARY KEY,
	USER_ID INT,
	PRODUCT_ID INT,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
	FOREIGN KEY (PRODUCT_ID) REFERENCES BOOKS(PRODUCT_ID)
);

SELECT * FROM ORDERS

-- INSERTING VALUES IN USERS TABLE
INSERT INTO USERS 
VALUES(1, 'CALLMEBHAI@GMAIL.COM','GOPAL'),

INSERT INTO USERS 
VALUES (2,'TOXICMANJI@GMAIL.COM','MANJIT'),
(3,'KAALAJAADU@GMAIL.COM','SOUMYADEEP')

ALTER TABLE USERS ALTER COLUMN EMAIL VARCHAR(50)

INSERT INTO USERS 
VALUES(4,'VIMALPANMASALA@GMAIL.COM','JAISAI'),
(5,'GHOSTLAUGH@GMAIL.COM','NAMITHA')

SELECT * FROM USERS

-- INSERTING VALUES INTO BOOKS TABLE
INSERT INTO BOOKS
VALUES(101,'MSSQL',100),
(102,'HALF-GIRLFRIEND',699),
(103,'BLACK MAGIC', 700),
(104,'HOW TO MARFA', 2000),
(105,'HOW TO LAUGH',2001.99)

SELECT * FROM BOOKS

-- INSERT INTO THE ORDER

INSERT INTO ORDERS
VALUES(401, 1, 101),
(402, 2, 102),
(403, 2, 103),
(404, 3, 103),
(405, 3, 104),
(406, 4, 102),
(407, 5, 102),
(408, 5, 105)

SELECT * FROM ORDERS

-- FULL OUTER JOIN 

SELECT * FROM ORDERS AS O
INNER JOIN USERS AS U ON O.USER_ID = U.USER_ID 
INNER JOIN BOOKS AS B ON O.PRODUCT_ID = B.PRODUCT_ID;

UPDATE USERS SET NAME = 'SOUMYADIP' WHERE USER_ID = 3

-- FIND THE BOOK USING ID
SELECT * FROM ORDERS AS O
INNER JOIN USERS AS U ON O.USER_ID = U.USER_ID 
INNER JOIN BOOKS AS B ON O.PRODUCT_ID = B.PRODUCT_ID WHERE B.PRODUCT_ID = 103 

-- FIND THE HIGHEST PRICED BOOK
SELECT * FROM ORDERS AS O
INNER JOIN USERS AS U ON O.USER_ID = U.USER_ID 
INNER JOIN BOOKS AS B ON O.PRODUCT_ID = B.PRODUCT_ID WHERE B.PRICE = (SELECT  MAX(PRICE) FROM BOOKS);



