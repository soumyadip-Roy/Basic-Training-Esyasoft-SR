USE ASSIGN_DB;

SELECT * FROM ORDERS AS O
INNER JOIN USERS AS U ON O.USER_ID = U.USER_ID 
INNER JOIN BOOKS AS B ON O.PRODUCT_ID = B.PRODUCT_ID ;

--QUERY 1

SELECT *
FROM (SELECT U.USER_ID,
        U.NAME AS USER_NAME,
        B.TITLE AS BOOK_TITLE,
        B.PRICE,
        ROW_NUMBER() OVER (PARTITION BY U.USER_ID ORDER BY B.PRICE DESC) AS ROWNUM,
        RANK() OVER (PARTITION BY U.USER_ID ORDER BY B.PRICE DESC) AS RANKNUM,
        DENSE_RANK() OVER (PARTITION BY U.USER_ID ORDER BY B.PRICE DESC) AS DENSERANKNUM
    FROM ORDERS O JOIN USERS U ON O.USER_ID = U.USER_ID
    JOIN BOOKS B ON O.PRODUCT_ID = B.PRODUCT_ID
) AS RANKEDBOOKS WHERE ROWNUM <= 2 ORDER BY USER_ID, ROWNUM;

-- QUERY 2

SELECT 
    U.USER_ID,
    U.NAME,
    SUM(B.PRICE) AS TOTAL_SPENT,
    RANK() OVER (ORDER BY SUM(B.PRICE) DESC) AS RANKNUM,
    DENSE_RANK() OVER (ORDER BY SUM(B.PRICE) DESC) AS DENSERANKNUM
FROM ORDERS O JOIN USERS U ON O.USER_ID = U.USER_ID
JOIN books B ON O.PRODUCT_ID = B.PRODUCT_ID
GROUP BY U.USER_ID, U.NAME;
